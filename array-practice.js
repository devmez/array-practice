
let deck = [];
let suits = [`Spades`, `Clubs`, `Hearts`, `Diamonds`];
let numbers = [`A`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `Jack`, `Queen`, `King`];
let userPrompt = require(`readline-sync`);
let userInput = false;

function initDeck(){
    //returns a deck 52 cards without joker
    for (let i = 0; i < 4; i ++){
        for (let a = 0; a < 13; a ++){
            deck.push(numbers[a] + ` ` + suits[i]);
        };
    };

    return deck;
}
initDeck();

function shuffleDeck(){
    //shuffles deck
    let numPos = null;
    let num2 = null;
    
    for (let y = deck.length - 1; y > 0; y--){
        numPos = Math.floor(Math.random() * (y + 1)); //random array-position generator
        num2 = deck[y]; //num2 = first card generated by for-loop
        deck[y] = deck[numPos]; //we want to switch 'num2' for a card randomly picked.
        deck[numPos] = num2; // ...then replace the randomly picked card with our 'num2' card.
    };

    return deck;
};
shuffleDeck();

function dealCard(){
    //returns the top card of the deck. note that if one card is dealt, 
    //there there are 51 cards in the deck

    let handout = deck[0];
    console.log(`You have ` + `[` + deck.length + `]` + ` cards remaining`);

    if (deck.length == 0){
        console.log(`No more cards to draw.`);
        resetDeck();
    };

    let dealCardAns = userPrompt.question(`Would you like to deal a card? [y / n]: `.toLowerCase());

    if (dealCardAns === `y`){
        deck.splice(0, 1);
        console.log(handout);
        dealCard();
    }else if (dealCardAns === `n`){
        
    }else{
        console.log(`Incorrect input. Try again.`)
        dealCard();
    };
};
dealCard();

function resetDeck(){
    //resets the deck to original 52 cards;
    userInput = userPrompt.question(`Reset Deck? [y / n]: `.toLowerCase());
    if (userInput === `y`){
        initDeck();
    }else if (userInput === `n`){
        console.log(`======== E N D ========`);
    }else{
        console.log(`Invalid Input. Try Again.`);
        resetDeck();
    };
};

